z <- 10
f(3)
source('~/Documents/Programming-in-R/Week 2 /Assignement 1/f.R')
f(3)
f(3)
source('~/Documents/Programming-in-R/Week 2 /Assignement 1/f.R')
f(3)
z <- 10
f(3)
source('~/Documents/Programming-in-R/Week 2 /Assignement 1/f.R')
f(3)
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
source('~/Documents/Programming-in-R/Week 2 /Assignement 1/h.R')
source('~/Documents/Programming-in-R/Week 2 /Assignement 1/h.R')
install.packages("swirl")
library(swirl)
swirl()
5 +7
x <- 5 +7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- get.wd()
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
dir.delete("testdir")
unlink("testdir", recursive = TRUE)
1:"0"
1:20
pi:10
15:1
?":"
seq(1,20)
seq(1,20, by=0.5)
seq(1,10, by=0.5)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10,length=30)
length(my_sec)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(C(0,1,2, times = 10))
rep(C(0,1,2), times = 10))
rep(c(0,1,2), times = 10))
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- "Mathias"
my_name <- c(my_char, "Mathias")
my_name
paste(my_name, collapse = " ")
paste("Hello, "World!, sep = " ")
paste("Hello, "World!", sep = " ")
paste("Hello", "World!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <-  x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical("vect", "vect2")
?identical
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data)
colnames(my_data) <- my_data
colnames(my_data) <- cnames
,y_data
my_data
v <- 1:20
lapply(v,mean)
v <- data.frame(matrix(1:20,4,5))
v
lapply(v,mean)
class(v)
g <- lapply(v,mean)
class(g)
swirl()
T == T
TRUE == TRUE
(FALSE == TRUE) == TRUE
TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
Type: 5 > 8 || 6 != 8 && 4 > 3.9
Type: 5 > 8 || 6 != 8 && 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints)
which(ints > 7)
any(ints < 0)
all(ints > 0)
x <- as.date("1970-01-01")
x <- as.Date("1970-01-01")
x
x + 4
y <- x + 364
y
y - x
unclass(y) - unclass(x)
setwd("~/Documents/Programming-in-R/Week 3/Assignement 2 - peer assessed")
setwd("~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2")
source('~/Documents/Programming-in-R/Week 2 /Assignement 1/complete.R')
source("~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R")
?solve
matrix(1:9,3,3)
x <- matrix(1:9,3,3)
x
solve(x)
class(x)
swirl()
Sys.date()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
mean(c(4,5,10))
my_mean(c(4,5,10))
submit
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5).
remainder(divisor = 11, num = 5)
remainder(4,divisor = 2)
args(remainder)
submit()
?sd
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
telegram("Suck", "it")
submit
submit()
mad_libs(place, adjective, noun)
mad_libs("place", "adjective", "noun")
submit()
submit()
submit()
word1 <- "Hello"
word2 <- "student!"
"Hello"%p%"student!"
"Hello"%p%"student!"
?paste
"Hello"%p%"student!"
paste(word1,word2)
submit()
paste("I", "love", "R!")
"I"%p%"love"%p%"R!"
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(clls_list)
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(clc_vect)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes  <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
viewinfo(flags)
viewinfo("flags")
viewinfo()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
Use tapply(flags$animate, flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$landmasses, flags$1:6, summary)
tapply(flags$landmasses, flags$1, summary)
tapply(flags$population, flags$landmasses, summary)
hint()
hint
info
info()
skip()
?solve
matrix(1:6,2,3)
x <- matrix(1:6,2,3)
solve(x)
matrix(1:25,5,5)
x <- matrix(1:25,5,5)
solve(x)
x <- matrix(1:16,4,4)
solve(x)
x
solve(x)
c <- rbind(c(1, -1/4), c(-1/4, 1))
c
solve(c)
a <- makeVector(1)
cachemean(a)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/makeVector.R')
a <- makeVector(1)
cachemean(a)
vector <- makeVector(c(1, 2, 3))
cachemean(vector)
cachemean(vector)
vector$set(c(4, 5, 6))
cachemean(vector)
cachemean(vector)
cachemean(vector)
?<<-
?<-
?"<<-"
m <<- 34
m <- 32
setmean <- function(mean) m <<- mean
m
setmean(3)
m
mean
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix()
c = rbind(c(1, -1/4), c(-1/4, 1))
makeCacheMatrix(c)
c
c = rbind(c(1, -1/4), c(-1/4, 1))
c
c = rbind(c(1, -1/4), c(-1/4, 1))
c
matriX <- makeCacheMatrix(c)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
matriX <- makeCacheMatrix(c)
c
cacheSolve(matriX)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matriX)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matriX)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
c = rbind(c(1, -1/4), c(-1/4, 1))
c
matriX <- makeCacheMatrix(c)
c
cacheSolve(matriX)
cacheSolve(matriX)
matrix
matriX
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/makeVector.R')
vector <- makeVector(c(1, 2, 3))
cachemean(vector)
cachemean(vector)
vector$set(c(4, 5, 6))
cachemean(vector)
cachemean(vector)
cachemean(vector)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/makeVector.R')
vector <- makeVector(c(1, 2, 3))
cachemean(vector)
cachemean(vector)
vector$set(c(4, 5, 6))
cachemean(vector)
cachemean(vector)
cachemean(vector)
c = rbind(c(1, -1/4), c(-1/4, 1))
c
makeCacheMatrix(c)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c)
makeCacheMatrix(c)
l <- makeCacheMatrix(c)
cacheSolve(l)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(l)
l <- makeCacheMatrix(c)
l
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
l <- makeCacheMatrix(c)
l
cacheSolve(l)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(l)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
l <- makeCacheMatrix(c)
cacheSolve(l)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
l <- makeCacheMatrix(c)
cacheSolve(l)
cacheSolve(l)
rnorm(80000000,100,15)
rnorm
f <- rnorm(1000,100,15)
hist(f)
f <- rnorm(90000,100,15)
hist(f)
xlabel(r)
?label
?lable
xlable
?rnorm
d <- 0:100,by = 1000
d <- [(0:100), by = 1000]
g <- gl(3,3)
g
?gl
gl(5, length = 50)
gl(5, 3,length = 50)
source('~/Documents/Programming-in-R/Week 3/assignement_2/ProgrammingAssignment2/cachematrix.R')
c = rbind(c(1, -1/4), c(-1/4, 1))
makeCacheMatrix(c)
cacheSolve(makeCacheMatrix(c))
cacheSolve(makeCacheMatrix(c))
mat <- makeCacheMatrix(c)
cacheSolve(mat
)
cacheSolve(mat)
library(datasets)
data(iris)
?iris
iris
iris["Sepal.Length"]
mean(iris["Sepal.Length"])
f <- iris["Sepal.Length"]
f
class(f)
mean(f)
avector <- as.vector(iris["Sepal.Length"])
avector
mean(avector)
avector[1]
class(iris$Sepal.Length)
f <- as.vector(iris["Sepal.Length"])
f
f <- rbind(iris["Sepal.Length"])
f
f <- cbind(iris["Sepal.Length"])
f
lapply(iris,mean)
g <- apply(iris[, 1:4], 1, mean)
g
h <- apply(iris[, 1:4], 2, mean)
h
colMeans(iris)
apply(iris, 1, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
d <- sapply(split(mtcars$hp, mtcars$cyl), mean)
d
d[1]
d[3]
d[3] - d[1]
abs(126.5779)
debug(ls)
ls
debug(ls)
ls()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
